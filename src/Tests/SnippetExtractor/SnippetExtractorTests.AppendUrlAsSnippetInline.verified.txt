[
  {
    Key: usage.cs,
    Language: cs,
    Value:
using MarkdownSnippets;
// ReSharper disable UnusedVariable

class Usage
{
    static void ReadingFiles()
    {

        var files = Directory.EnumerateFiles(@"C:/path", "*.cs", SearchOption.AllDirectories);

        var snippets = FileSnippetExtractor.Read(files);

    }

    static void DirectoryMarkdownProcessorRun()
    {

        var processor = new DirectoryMarkdownProcessor(
            "targetDirectory",
            directoryIncludes: _ => true,
            markdownDirectoryIncludes: _ => true,
            snippetDirectoryIncludes: _ => true);
        processor.Run();

    }

    static void DirectoryMarkdownProcessorRunMaxWidth()
    {

        var processor = new DirectoryMarkdownProcessor(
            "targetDirectory",
            maxWidth: 80,
            directoryIncludes: _ => true,
            markdownDirectoryIncludes: _ => true,
            snippetDirectoryIncludes: _ => true);
        processor.Run();

    }
},
    Error: ,
    FileLocation: https://raw.githubusercontent.com/SimonCropp/MarkdownSnippets/master/src/Tests/Snippets/Usage.cs(1-45),
    IsInError: false
  },
  {
    Key: ReadingFilesSimple,
    Language: cs,
    Value:
var files = Directory.EnumerateFiles(@"C:/path", "*.cs", SearchOption.AllDirectories);

var snippets = FileSnippetExtractor.Read(files);,
    Error: ,
    FileLocation: https://raw.githubusercontent.com/SimonCropp/MarkdownSnippets/master/src/Tests/Snippets/Usage.cs(8-14),
    IsInError: false
  },
  {
    Key: DirectoryMarkdownProcessorRun,
    Language: cs,
    Value:
var processor = new DirectoryMarkdownProcessor(
    "targetDirectory",
    directoryIncludes: _ => true,
    markdownDirectoryIncludes: _ => true,
    snippetDirectoryIncludes: _ => true);
processor.Run();,
    Error: ,
    FileLocation: https://raw.githubusercontent.com/SimonCropp/MarkdownSnippets/master/src/Tests/Snippets/Usage.cs(19-28),
    IsInError: false
  },
  {
    Key: DirectoryMarkdownProcessorRunMaxWidth,
    Language: cs,
    Value:
var processor = new DirectoryMarkdownProcessor(
    "targetDirectory",
    maxWidth: 80,
    directoryIncludes: _ => true,
    markdownDirectoryIncludes: _ => true,
    snippetDirectoryIncludes: _ => true);
processor.Run();,
    Error: ,
    FileLocation: https://raw.githubusercontent.com/SimonCropp/MarkdownSnippets/master/src/Tests/Snippets/Usage.cs(33-43),
    IsInError: false
  }
]